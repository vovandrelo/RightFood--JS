"use strict";

//====================================================================================================================\\
//================================= МОДУЛЬ, ОТВЕЧАЮЩИЙ ЗА ПОЛУЧЕНИЕ ДАННЫХ С СВЕРВЕРА ================================\\
//====================================================================================================================\\

class service {
    // Запрос по получение данных:
    async getData(url, JWT = false) {
        console.log("Запрос будет выполнен по адресу:", url);
        let res = null;

        // Если запрос предполагает наличие JWT-токена, то:
        if (JWT) {
            // Выполняем запрос на сервер и передаём в качестве заголовка запроса JWT:
            res = await fetch(url, {
                headers: new Headers({
                    'Authorization': 'Bearer ' + JWT,
                })
            });
        // Если запрос не предполагает наличие JWT-токена, то:
        } else {
            // Выполняем запрос на сервер:
            res = await fetch(url);
        }

        // Еcли при выполнении запроса произошла ошибка, то выбрасываем ошибку:
        if (!res.ok) { throw new Error("При получении ответа от сервера что-то сильно пошло не так..."); }
        // Возвращаем ответа от сервера:
        console.log("Запрос был успешно выполнен");
        return await res.json();
    }
    // Запрос на отправку данных:
    async postData(url, data, JWT = false) {
        console.log("Выполнение запроса по адресу:", url);

        let res = null;

        if (JWT) {
            res = await fetch(url, {
                method: 'POST',                                     // Метод запроса
                headers: {
                    'Content-type': 'application/json',
                    'Authorization': 'Bearer ' + JWT},              // Формат отправляемых данных
                body: data                                          // Отправляемые данные
            });
        } else {
            // Выполняем запрос на сервер:
            res = await fetch(url, {
                method: 'POST',                                     // Метод запроса
                headers: { 'Content-type': 'application/json' },    // Формат отправляемых данных
                body: data                                          // Отправляемые данные
            });
        }

        // Еcли при выполнении запроса произошла ошибка, то выбрасываем ошибку:
        if (!res.ok) { throw new Error("При получении ответа от сервера что-то сильно пошло не так..."); }
        // Возвращаем ответа от сервера:
        console.log("Запрос был успешно выполнен");
        return await res.json();
    }
    // Запрос на отправку данных, включая файлы(изображения):
    async postDataAndfiles(url, data, JWT) {
        console.log("Выполнение запроса по адресу:", url);
        // Выполняем запрос на сервер:
        const res = await fetch(url, {
            method: 'POST',                                     // Метод запроса
            body: data,                                         // Отправляемые данные
            headers: new Headers({
                'Authorization': 'Bearer ' + JWT,
            })
        });
        // Если при выполнении запроса произошла ошибка, то выбрасываем ошибку:
        if (!res.ok) { throw new Error("При получении ответа от сервера что-то сильно пошло не так..."); }
        // Возвращаем ответа от сервера:
        console.log("Запрос был успешно выполнен");

        return await res.json();
    }
}

export default new service();